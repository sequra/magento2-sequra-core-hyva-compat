<?php
/** @var \Sequra\Core\Block\WidgetInitializer $block */
?>
<style>
    .sequra-educational-popup {
        color: #009C5C;
        cursor: pointer;
    }

    .sequra_partpayment_description {
        padding: 0 20px 20px;
        color: gray;
    }
</style>

<script>
    (function (config) {
        function sequraWidgetsInitializer() {
            if (!config.hasOwnProperty('[data-content-type="sequra_core"]')) {
                return;
            }

            config = config['[data-content-type="sequra_core"]'];
            if (!config.hasOwnProperty('Sequra_Core/js/content-type/sequra-core/appearance/default/widget')) {
                return;
            }

            config = config['Sequra_Core/js/content-type/sequra-core/appearance/default/widget'];

            if (!config.widgetConfig.isProductEnabled && config.widgetConfig.action_name === 'catalog_product_view') {
                hideAllPromotionalWidgets();
            }

            if (!config.widgetConfig.isProductListingEnabled) {
                hideAllMiniWidgets();
            }

            if (!config.widgetConfig.hasOwnProperty('merchantId')) {
                return;
            }

            if (
                !config.widgetConfig || !config.widgetConfig.products ||
                (
                    config.widgetConfig.action_name !== 'catalog_product_view' &&
                    config.widgetConfig.action_name !== 'cms_index_index' &&
                    config.widgetConfig.action_name !== 'catalog_category_view' &&
                    config.widgetConfig.action_name !== 'catalogsearch_result_index'
                ) ||
                (!config.widgetConfig.isProductEnabled && config.widgetConfig.action_name === 'catalog_product_view')
            ) {
                return;
            }

            let sequraElements = document.querySelectorAll('[data-content-type="sequra_core"]');
            if (!sequraElements.length) {
                return;
            }

            initializePromotionalWidgets(sequraElements);

            loadSequraLibrary();
        }

        function hideAllPromotionalWidgets() {
            let sequraElements = document.getElementsByClassName('sequra-promotion-widget');

            [...sequraElements].forEach((el) => {
                el.parentNode.removeChild(el);
            });
        }

        function hideAllMiniWidgets() {
            let miniElements = document.getElementsByClassName('sequra-educational-popup');

            [...miniElements].forEach((el) => {
                el.parentNode.removeChild(el);
            });
        }

        function initializePromotionalWidgets(sequraElements) {
            let widgetConfig = JSON.parse(config.widgetConfig.widgetConfig);

            [...sequraElements].forEach((element) => {
                let enabledMethods = element.getAttribute('data-payment-method'),
                    oneRendered = false

                if (enabledMethods === '') {
                    renderDefaultMethod(config, element)

                    return
                }

                config.widgetConfig.products.forEach((product) => {
                    if (element.classList.contains('sequra-educational-popup')) {
                        let priceBoxEl = element
                        let productId = null
                        while ((priceBoxEl = priceBoxEl.parentNode) && priceBoxEl !== document) {
                            if (priceBoxEl.getAttribute('data-product-id')) {
                                productId = priceBoxEl.getAttribute('data-product-id')
                                break
                            }
                        }

                        window.addEventListener(`update-prices-${productId}`, function (e) {
                            const price = Math.round(e.detail.finalPrice.amount * 100)
                            element.setAttribute('data-amount', price)

                            Sequra.refreshComponents?.()
                        })

                        return
                    }

                    if (element.hasAttribute('data-payment-method') && !enabledMethods.includes(product.id)) {
                        return
                    }

                    oneRendered = true
                    let newElement = element.querySelector('[data-product="' + product.id + '"]')

                    if (newElement) {
                        return
                    }

                    newElement = document.createElement('div')
                    newElement.classList.add('sequra-promotion-widget')
                    newElement.style.minWidth = '277px'
                    newElement.style.height = 'min-content'
                    newElement.style.paddingBottom = '20px'
                    newElement.setAttribute('data-amount', config.widgetConfig.amount)
                    newElement.setAttribute('data-product', product.id)
                    newElement.setAttribute('data-campaign', product.campaign)

                    Object.keys(widgetConfig).forEach(
                        key =>
                            newElement.setAttribute('data-' + key, widgetConfig[key])
                    )

                    element.appendChild(newElement)
                })

                if (!oneRendered) {
                    renderDefaultMethod(config, element)
                }
            })
        }

        function renderDefaultMethod(config, element) {
            let product = config.widgetConfig.products[0];

            let newElement = element.querySelector('[data-product="' + product.id + '"]')

            if (newElement) {
                return;
            }

            newElement = document.createElement('div');
            newElement.classList.add('sequra-promotion-widget');
            newElement.style.minWidth = '277px';
            newElement.style.height = 'min-content';
            newElement.style.paddingBottom = '20px';
            newElement.setAttribute('data-amount', config.widgetConfig.amount);
            newElement.setAttribute('data-product', product.id);
            newElement.setAttribute('data-campaign', product.campaign);

            let widgetConfig = JSON.parse(config.widgetConfig.widgetConfig);
            Object.keys(widgetConfig).forEach(
                key =>
                    newElement.setAttribute('data-' + key, widgetConfig[key])
            );

            element.appendChild(newElement);
        }

        function loadSequraLibrary() {
            if (typeof Sequra !== 'undefined') {
                sequraRefreshWidgets();

                return;
            }

            let products = []
            config.widgetConfig.products.forEach((product) => {
                products.push(product.id)
            })
            var sequraConfigParams = {
                merchant: config.widgetConfig.merchantId,
                assetKey: config.widgetConfig.assetKey,
                products: products,
                scriptUri: config.widgetConfig.scriptUri,
                decimalSeparator: config.widgetConfig.decimalSeparator,
                thousandSeparator: config.widgetConfig.thousandSeparator,
                locale: config.widgetConfig.locale,
                currency: config.widgetConfig.currency,
            };

            (
                function (i, s, o, g, r, a, m) {
                    i['SequraConfiguration'] = g
                    i['SequraOnLoad'] = []
                    i[r] = {}
                    i[r][a] = function (callback) {
                        i['SequraOnLoad'].push(callback)
                    };
                    (a = s.createElement(o)),
                        (m = s.getElementsByTagName(o)[0])
                    a.async = 1
                    a.src = g.scriptUri
                    m.parentNode.insertBefore(a, m)
                    a.onload = function () {
                        sequraRefreshWidgets()

                        window.addEventListener('update-product-final-price', function (e) {
                            const price = Math.round(e.detail * 100)
                            const promotionalElements = document.getElementsByClassName('sequra-promotion-widget');
                            [...promotionalElements].forEach((el) => {
                                el.setAttribute('data-amount', price)
                            })

                            Sequra.refreshComponents?.()
                        })
                    }
                }
            )
            (window, document, 'script', sequraConfigParams, 'Sequra', 'onLoad')
        }

        function sequraRefreshWidgets() {
            if (!Sequra.computeCreditAgreements) {
                setTimeout(function () {
                    sequraRefreshWidgets();
                }, 1000);

                return;
            }

            let miniElements = document.getElementsByClassName('sequra-educational-popup');

            [...miniElements].forEach((el) => {
                if (el.innerText === '' && Sequra.computeCreditAgreements) {
                    let creditAgreement = Sequra.computeCreditAgreements({
                        amount: el.getAttribute('data-amount'),
                        product: el.getAttribute('data-product')
                    });

                    if (Object.keys(creditAgreement).length === 0) {
                        setTimeout(function () {
                            sequraRefreshWidgets();
                        }, 1000);

                        return;
                    }

                    creditAgreement = creditAgreement[el.getAttribute('data-product')]
                        .filter(function (item) {
                            return item.default
                        })[0];

                    let minAmount = el.getAttribute('data-min-amount'),
                        widgetLabel = el.getAttribute('data-label')
                                        .replace('%s', creditAgreement.instalment_total.string);

                    if (parseInt(el.getAttribute('data-amount')) < parseInt(minAmount)) {
                        widgetLabel = el.getAttribute('data-below-limit')
                                        .replace('%s', creditAgreement.min_amount.string);
                    }

                    el.innerText = widgetLabel;
                }
            });
            Sequra.refreshComponents?.();
        }

        document.addEventListener('DOMContentLoaded',sequraWidgetsInitializer);
    })(<?= /* @noEscape */ $block->getWidgetConfig(); ?>);
</script>
